/* 
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = EdFi.OdsApi.Sdk.Client.SwaggerDateConverter;

namespace EdFi.OdsApi.Sdk.Models.All
{
    /// <summary>
    /// EdFiPostSecondaryEvent
    /// </summary>
    [DataContract]
    public partial class EdFiPostSecondaryEvent :  IEquatable<EdFiPostSecondaryEvent>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiPostSecondaryEvent" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiPostSecondaryEvent() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiPostSecondaryEvent" /> class.
        /// </summary>
        /// <param name="Id">Id (required).</param>
        /// <param name="EventDate">The date the event occurred or was recorded. (required).</param>
        /// <param name="PostSecondaryEventCategoryDescriptor">The PostSecondaryEvent that is logged (e.g., FAFSA application, college application, college acceptance). (required).</param>
        /// <param name="PostSecondaryInstitutionReference">PostSecondaryInstitutionReference.</param>
        /// <param name="StudentReference">StudentReference (required).</param>
        /// <param name="Etag">A unique system-generated value that identifies the version of the resource..</param>
        public EdFiPostSecondaryEvent(string Id = default(string), DateTime? EventDate = default(DateTime?), string PostSecondaryEventCategoryDescriptor = default(string), EdFiPostSecondaryInstitutionReference PostSecondaryInstitutionReference = default(EdFiPostSecondaryInstitutionReference), EdFiStudentReference StudentReference = default(EdFiStudentReference), string Etag = default(string))
        {
            // to ensure "Id" is required (not null)
            if (Id == null)
            {
                throw new InvalidDataException("Id is a required property for EdFiPostSecondaryEvent and cannot be null");
            }
            else
            {
                this.Id = Id;
            }
            // to ensure "EventDate" is required (not null)
            if (EventDate == null)
            {
                throw new InvalidDataException("EventDate is a required property for EdFiPostSecondaryEvent and cannot be null");
            }
            else
            {
                this.EventDate = EventDate;
            }
            // to ensure "PostSecondaryEventCategoryDescriptor" is required (not null)
            if (PostSecondaryEventCategoryDescriptor == null)
            {
                throw new InvalidDataException("PostSecondaryEventCategoryDescriptor is a required property for EdFiPostSecondaryEvent and cannot be null");
            }
            else
            {
                this.PostSecondaryEventCategoryDescriptor = PostSecondaryEventCategoryDescriptor;
            }
            // to ensure "StudentReference" is required (not null)
            if (StudentReference == null)
            {
                throw new InvalidDataException("StudentReference is a required property for EdFiPostSecondaryEvent and cannot be null");
            }
            else
            {
                this.StudentReference = StudentReference;
            }
            this.PostSecondaryInstitutionReference = PostSecondaryInstitutionReference;
            this.Etag = Etag;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The date the event occurred or was recorded.
        /// </summary>
        /// <value>The date the event occurred or was recorded.</value>
        [DataMember(Name="eventDate", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? EventDate { get; set; }

        /// <summary>
        /// The PostSecondaryEvent that is logged (e.g., FAFSA application, college application, college acceptance).
        /// </summary>
        /// <value>The PostSecondaryEvent that is logged (e.g., FAFSA application, college application, college acceptance).</value>
        [DataMember(Name="postSecondaryEventCategoryDescriptor", EmitDefaultValue=false)]
        public string PostSecondaryEventCategoryDescriptor { get; set; }

        /// <summary>
        /// Gets or Sets PostSecondaryInstitutionReference
        /// </summary>
        [DataMember(Name="postSecondaryInstitutionReference", EmitDefaultValue=false)]
        public EdFiPostSecondaryInstitutionReference PostSecondaryInstitutionReference { get; set; }

        /// <summary>
        /// Gets or Sets StudentReference
        /// </summary>
        [DataMember(Name="studentReference", EmitDefaultValue=false)]
        public EdFiStudentReference StudentReference { get; set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [DataMember(Name="_etag", EmitDefaultValue=false)]
        public string Etag { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdFiPostSecondaryEvent {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  EventDate: ").Append(EventDate).Append("\n");
            sb.Append("  PostSecondaryEventCategoryDescriptor: ").Append(PostSecondaryEventCategoryDescriptor).Append("\n");
            sb.Append("  PostSecondaryInstitutionReference: ").Append(PostSecondaryInstitutionReference).Append("\n");
            sb.Append("  StudentReference: ").Append(StudentReference).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdFiPostSecondaryEvent);
        }

        /// <summary>
        /// Returns true if EdFiPostSecondaryEvent instances are equal
        /// </summary>
        /// <param name="input">Instance of EdFiPostSecondaryEvent to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdFiPostSecondaryEvent input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.EventDate == input.EventDate ||
                    (this.EventDate != null &&
                    this.EventDate.Equals(input.EventDate))
                ) && 
                (
                    this.PostSecondaryEventCategoryDescriptor == input.PostSecondaryEventCategoryDescriptor ||
                    (this.PostSecondaryEventCategoryDescriptor != null &&
                    this.PostSecondaryEventCategoryDescriptor.Equals(input.PostSecondaryEventCategoryDescriptor))
                ) && 
                (
                    this.PostSecondaryInstitutionReference == input.PostSecondaryInstitutionReference ||
                    (this.PostSecondaryInstitutionReference != null &&
                    this.PostSecondaryInstitutionReference.Equals(input.PostSecondaryInstitutionReference))
                ) && 
                (
                    this.StudentReference == input.StudentReference ||
                    (this.StudentReference != null &&
                    this.StudentReference.Equals(input.StudentReference))
                ) && 
                (
                    this.Etag == input.Etag ||
                    (this.Etag != null &&
                    this.Etag.Equals(input.Etag))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.EventDate != null)
                    hashCode = hashCode * 59 + this.EventDate.GetHashCode();
                if (this.PostSecondaryEventCategoryDescriptor != null)
                    hashCode = hashCode * 59 + this.PostSecondaryEventCategoryDescriptor.GetHashCode();
                if (this.PostSecondaryInstitutionReference != null)
                    hashCode = hashCode * 59 + this.PostSecondaryInstitutionReference.GetHashCode();
                if (this.StudentReference != null)
                    hashCode = hashCode * 59 + this.StudentReference.GetHashCode();
                if (this.Etag != null)
                    hashCode = hashCode * 59 + this.Etag.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PostSecondaryEventCategoryDescriptor (string) maxLength
            if(this.PostSecondaryEventCategoryDescriptor != null && this.PostSecondaryEventCategoryDescriptor.Length > 306)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PostSecondaryEventCategoryDescriptor, length must be less than 306.", new [] { "PostSecondaryEventCategoryDescriptor" });
            }

            yield break;
        }
    }

}
